// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Web.Infrastructure.Persistence;

#nullable disable

namespace Web.Infrastructure.Migrations
{
    [DbContext(typeof(TeaachAdminDbContext))]
    partial class TeaachAdminDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Web.Domain.Entity.AcademyInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AcademyName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("academy_name")
                        .HasColumnOrder(2);

                    b.Property<string>("AcademyNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("academy_num")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_academy_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.AppIdentityUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("RefreshToken")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("refresh_token")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("RefreshTokenExpiration")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("refresh_token_expiration")
                        .HasColumnOrder(4);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .HasColumnOrder(1);

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name")
                        .HasColumnOrder(2);

                    b.HasKey("Id");

                    b.ToTable("app_identity_user", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.AppRole", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("role_name")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_role", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.AppUploadFileInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("CurrentFileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("current_filename")
                        .HasColumnOrder(2);

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("file_type")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("OriginFileName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("origin_filename")
                        .HasColumnOrder(1);

                    b.Property<string>("RelativePath")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("relative_path")
                        .HasColumnOrder(3);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_id")
                        .HasColumnOrder(5);

                    b.HasKey("Id");

                    b.ToTable("app_uploadfile_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.AppUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid?>("AvatarId")
                        .HasColumnType("uuid")
                        .HasColumnName("user_avatar_id")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("OpenId")
                        .HasColumnType("text");

                    b.Property<string>("PassWord")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<Guid>("RoleId")
                        .HasColumnType("uuid")
                        .HasColumnName("role_id")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("user_name")
                        .HasColumnOrder(1);

                    b.HasKey("Id");

                    b.ToTable("app_user", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.BuildingInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("BuildingName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("building_name")
                        .HasColumnOrder(2);

                    b.Property<string>("BuildingNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("building_num")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<string>("floor")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("floor")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("app_building_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.ClassInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("ClassName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class_name")
                        .HasColumnOrder(2);

                    b.Property<string>("ClassNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("class_num")
                        .HasColumnOrder(3);

                    b.Property<string>("CounselorId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("counselor_id")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("SpecializedNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("specialized_num")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_class_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.CourseInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("CourseName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("course_name")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("SpecializedNum")
                        .HasColumnType("text")
                        .HasColumnName("specialized_num")
                        .HasColumnOrder(4);

                    b.Property<string>("TeacherId")
                        .HasColumnType("text")
                        .HasColumnName("teacher_id")
                        .HasColumnOrder(5);

                    b.Property<Guid>("TextBookId")
                        .HasColumnType("uuid")
                        .HasColumnName("textbook_id")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<bool>("isPublicCourses")
                        .HasColumnType("boolean")
                        .HasColumnName("is_public_courses")
                        .HasColumnOrder(3);

                    b.HasKey("Id");

                    b.ToTable("app_course_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.CurriCulum", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("CurriCulumData")
                        .HasColumnType("text")
                        .HasColumnName("curriculum_data")
                        .HasColumnOrder(1);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("SpecializedName")
                        .HasColumnType("text")
                        .HasColumnName("specialized_name")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_curriculum", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.Dormitory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("BuildingNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("building_num")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<int>("DormitoryNum")
                        .HasColumnType("integer")
                        .HasColumnName("dormitory_num")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("StudentId")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("student_id")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<bool>("isDormAdmin")
                        .HasColumnType("boolean")
                        .HasColumnName("is_dorm_admin")
                        .HasColumnOrder(4);

                    b.HasKey("Id");

                    b.ToTable("app_dormitory", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.IntentionInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uuid")
                        .HasColumnName("class_id")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_intention_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.Questionnaire", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("end_time")
                        .HasColumnOrder(3);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("QuestionnaireTheme")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("questionnaire_theme")
                        .HasColumnOrder(1);

                    b.Property<string>("QuestionnaireTitle")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("questionnaire_title")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_questionnaire", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.QuestionnaireOptions", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("OptionName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("option_name")
                        .HasColumnOrder(3);

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uuid")
                        .HasColumnName("questionnaire_id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("QuestionnaireQuestionId")
                        .HasColumnType("uuid")
                        .HasColumnName("questionnaire_question_id")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_questionnaire_options", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.QuestionnaireRecord", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("OptionDescribe")
                        .HasColumnType("text")
                        .HasColumnName("option_describe")
                        .HasColumnOrder(4);

                    b.Property<int>("QuestionnaireFlag")
                        .HasColumnType("integer")
                        .HasColumnName("questionnaire_flag")
                        .HasColumnOrder(5);

                    b.Property<Guid>("QuestionnaireID")
                        .HasColumnType("uuid")
                        .HasColumnName("questionnaire_id")
                        .HasColumnOrder(1);

                    b.Property<string>("QuestionnaireOptionType")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("questionnaire_option_type")
                        .HasColumnOrder(2);

                    b.Property<string>("QuestionnaireQuestion")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("questionnaire_question")
                        .HasColumnOrder(3);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_questionnaire_record", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.QuestionnaireRes", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<Guid>("OptionId")
                        .HasColumnType("uuid")
                        .HasColumnName("option_id")
                        .HasColumnOrder(3);

                    b.Property<string>("OptionValue")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("option_value")
                        .HasColumnOrder(4);

                    b.Property<Guid>("QuestionnaireId")
                        .HasColumnType("uuid")
                        .HasColumnName("questionnaire_id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("QuestionnaireQuestionId")
                        .HasColumnType("uuid")
                        .HasColumnName("questionnaire_question_id")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_questionnaire_res", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.ScoreInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uuid")
                        .HasColumnName("class_id")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("Score")
                        .HasColumnType("text")
                        .HasColumnName("score")
                        .HasColumnOrder(3);

                    b.Property<Guid>("SemesterId")
                        .HasColumnType("uuid")
                        .HasColumnName("semester_id")
                        .HasColumnOrder(4);

                    b.Property<Guid>("StudentId")
                        .HasColumnType("uuid")
                        .HasColumnName("student_id")
                        .HasColumnOrder(1);

                    b.Property<Guid>("SubjectId")
                        .HasColumnType("uuid")
                        .HasColumnName("subject_id")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_score_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.SpecializedInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AcademyNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("academy_num")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("SpecializedName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("specialized_name")
                        .HasColumnOrder(2);

                    b.Property<string>("SpecializedNum")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("specialized_num")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_specialized_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.StudentInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(9);

                    b.Property<Guid>("ClassId")
                        .HasColumnType("uuid")
                        .HasColumnName("class_id")
                        .HasColumnOrder(5);

                    b.Property<string>("ContactDetails")
                        .HasColumnType("text")
                        .HasColumnName("contact_details")
                        .HasColumnOrder(12);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("EnrollmentTime")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("enrollment_time")
                        .HasColumnOrder(13);

                    b.Property<string>("FatherName")
                        .HasColumnType("text")
                        .HasColumnName("father_name")
                        .HasColumnOrder(10);

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("id_number")
                        .HasColumnOrder(4);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("MotherName")
                        .HasColumnType("text")
                        .HasColumnName("mother_name")
                        .HasColumnOrder(11);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number")
                        .HasColumnOrder(6);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sex")
                        .HasColumnOrder(3);

                    b.Property<string>("StudentId")
                        .HasColumnType("text")
                        .HasColumnName("student_id")
                        .HasColumnOrder(1);

                    b.Property<string>("StudentName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("student_name")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<string>("WeChat")
                        .HasColumnType("text")
                        .HasColumnName("we_chat")
                        .HasColumnOrder(7);

                    b.Property<string>("qqNumber")
                        .HasColumnType("text")
                        .HasColumnName("qq_number")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.ToTable("app_student_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.TeacherInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("AcademyNum")
                        .HasColumnType("text")
                        .HasColumnName("academy_num")
                        .HasColumnOrder(6);

                    b.Property<string>("Address")
                        .HasColumnType("text")
                        .HasColumnName("address")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("id_number")
                        .HasColumnOrder(5);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number")
                        .HasColumnOrder(10);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("Sex")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("sex")
                        .HasColumnOrder(3);

                    b.Property<string>("TeacherName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("teacher_name")
                        .HasColumnOrder(2);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<string>("WeChat")
                        .HasColumnType("text")
                        .HasColumnName("we_chat")
                        .HasColumnOrder(7);

                    b.Property<string>("WorkNumber")
                        .HasColumnType("text")
                        .HasColumnName("work_number")
                        .HasColumnOrder(1);

                    b.Property<string>("qqNumber")
                        .HasColumnType("text")
                        .HasColumnName("qq_number")
                        .HasColumnOrder(8);

                    b.HasKey("Id");

                    b.ToTable("app_teacher_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Entity.TermInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid");

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<string>("Remarks")
                        .HasColumnType("text");

                    b.Property<string>("TermName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone");

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("app_term_info");
                });

            modelBuilder.Entity("Web.Domain.Entity.TextBookInfo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("ContactNumber")
                        .HasColumnType("text")
                        .HasColumnName("contact_number")
                        .HasColumnOrder(4);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Press")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("press")
                        .HasColumnOrder(3);

                    b.Property<string>("Price")
                        .HasColumnType("text")
                        .HasColumnName("price")
                        .HasColumnOrder(2);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("TextBookName")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("text_bookname")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("app_textbook_info", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Log.AuditLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<string>("BrowserInfo")
                        .HasColumnType("text")
                        .HasColumnName("browser_info")
                        .HasColumnOrder(2);

                    b.Property<string>("ClientIpAddress")
                        .HasColumnType("text")
                        .HasColumnName("client_ip_address")
                        .HasColumnOrder(4);

                    b.Property<string>("ClientName")
                        .HasColumnType("text")
                        .HasColumnName("client_name")
                        .HasColumnOrder(3);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("CustomData")
                        .HasColumnType("text")
                        .HasColumnName("custom_data")
                        .HasColumnOrder(11);

                    b.Property<string>("Exception")
                        .HasColumnType("text")
                        .HasColumnName("exception")
                        .HasColumnOrder(8);

                    b.Property<int>("ExecutionDuration")
                        .HasColumnType("integer")
                        .HasColumnName("execution_duration")
                        .HasColumnOrder(5);

                    b.Property<DateTime>("ExecutionTime")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("execution_time")
                        .HasColumnOrder(6);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("MethodName")
                        .HasColumnType("text")
                        .HasColumnName("method_name")
                        .HasColumnOrder(1);

                    b.Property<string>("Parameters")
                        .HasColumnType("text")
                        .HasColumnName("parameters")
                        .HasColumnOrder(12);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("ReturnValue")
                        .HasColumnType("text")
                        .HasColumnName("return_value")
                        .HasColumnOrder(7);

                    b.Property<string>("ServiceName")
                        .HasColumnType("text")
                        .HasColumnName("service_name")
                        .HasColumnOrder(9);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.Property<string>("UserInfo")
                        .HasColumnType("text")
                        .HasColumnName("user_info")
                        .HasColumnOrder(10);

                    b.HasKey("Id");

                    b.ToTable("audit_log", (string)null);
                });

            modelBuilder.Entity("Web.Domain.Log.ExceptionLog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id")
                        .HasColumnOrder(0);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at")
                        .HasColumnOrder(992);

                    b.Property<Guid?>("CreatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("created_by")
                        .HasColumnOrder(994);

                    b.Property<string>("FullMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("full_message")
                        .HasColumnOrder(2);

                    b.Property<bool>("IsActived")
                        .HasColumnType("boolean")
                        .HasColumnName("is_actived")
                        .HasColumnOrder(998);

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_deleted")
                        .HasColumnOrder(997);

                    b.Property<string>("Remarks")
                        .HasMaxLength(800)
                        .HasColumnType("character varying(800)")
                        .HasColumnName("remarks")
                        .HasColumnOrder(999);

                    b.Property<string>("ShortMessage")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("short_message")
                        .HasColumnOrder(1);

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_at")
                        .HasColumnOrder(993);

                    b.Property<Guid?>("UpdatedBy")
                        .HasColumnType("uuid")
                        .HasColumnName("updated_by")
                        .HasColumnOrder(995);

                    b.HasKey("Id");

                    b.ToTable("exception_log", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
